plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.20'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id 'org.jlleitschuh.gradle.ktlint' version '8.2.0'
}

group = 'io.acari'
version = '2.0.2'

repositories {
  mavenCentral()
  mavenLocal()
  jcenter()
}

ext {
  kotlinVersion = '1.3.20'
  vertxVersion = '3.7.1'
  junitJupiterEngineVersion = '5.4.0'
}

application {
  mainClassName = 'io.acari.LauncherKt'
}


def mainVerticleName = 'io.acari.DeploymentVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-mongo-client:$vertxVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-auth-oauth2:$vertxVersion"
  implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation "io.vertx:vertx-micrometer-metrics:$vertxVersion"
  implementation "io.micrometer:micrometer-registry-prometheus:1.1.4"
  implementation "com.google.guava:guava:27.1-jre"
  implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
  implementation platform('software.amazon.awssdk:bom:2.10.50')
  implementation 'software.amazon.awssdk:s3'

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
  testImplementation 'io.mockk:mockk:1.9.1'
  testImplementation 'org.assertj:assertj-core:3.12.2'
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  archiveName = "${baseName}.${extension}"
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
